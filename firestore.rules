  rules_version = '2';
  service cloud.firestore {
    match /databases/{database}/documents {
      // Helper functions
      function isAuthenticated() {
        return request.auth != null;
      }

      function isOwner(userId) {
        return isAuthenticated() && request.auth.uid == userId;
      }

      function isPartner(resource) {
        return isAuthenticated() && resource.data.partnerId == request.auth.uid;
      }

      function isInCouple(resource) {
        return isAuthenticated() &&
          (resource.data.user1Id == request.auth.uid ||
           resource.data.user2Id == request.auth.uid);
      }

      // ユーザープロフィール
      match /users/{userId} {
        allow read: if isOwner(userId) || isPartner(resource);
        allow create: if isOwner(userId);
        allow update: if isOwner(userId);
        allow delete: if false; // プロフィールは削除不可
      }

      // カップル情報
      match /couples/{coupleId} {
        allow read: if isInCouple(resource);
        allow create: if isAuthenticated();
        allow update: if isInCouple(resource);
        allow delete: if isInCouple(resource);
      }

      // イベント（予定）
      match /events/{eventId} {
        allow read, write: if isAuthenticated();
      }
      // 記念日
      match /anniversaries/{anniversaryId} {
        allow read: if isAuthenticated();
        allow write: if isAuthenticated();
      }

      // 共有イベント用のサブコレクション
      match /users/{userId}/sharedEvents/{eventId} {
        allow read: if isOwner(userId);
        allow write: if isAuthenticated();
      }
    }
  }
